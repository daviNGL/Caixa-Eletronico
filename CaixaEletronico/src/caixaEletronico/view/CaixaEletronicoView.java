/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caixaEletronico.view;

import caixaEletronico.controller.CaixaEletronicoController;
import javax.swing.JOptionPane;


/**
 *
 * @author davin
 */
public class CaixaEletronicoView extends javax.swing.JFrame {
    
    private final CaixaEletronicoController controller;
    private ExtratoView extrato;
    
    /**
     * Creates new form TelaPrincipal
     */
    public CaixaEletronicoView() {
        initComponents();
        controller = new CaixaEletronicoController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSacar = new javax.swing.JButton();
        btnExtrato = new javax.swing.JButton();
        btnRelatorio = new javax.swing.JButton();
        btnValorTotalDisponivel = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnReposicaoDeCedulas = new javax.swing.JButton();
        btnCotaMinima = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Caixa Eletrônico");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSacar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnSacar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caixaEletronico/imagens/dollar-bills.png"))); // NOI18N
        btnSacar.setText("     SACAR");
        btnSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSacar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 420, 40));

        btnExtrato.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnExtrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caixaEletronico/imagens/clipboard-with-pencil-.png"))); // NOI18N
        btnExtrato.setText("     EXTRATO");
        btnExtrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtratoActionPerformed(evt);
            }
        });
        getContentPane().add(btnExtrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 123, 420, 40));

        btnRelatorio.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caixaEletronico/imagens/funds.png"))); // NOI18N
        btnRelatorio.setText("     RELATÓRIO DE CÉDULAS");
        btnRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioActionPerformed(evt);
            }
        });
        getContentPane().add(btnRelatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 420, 40));

        btnValorTotalDisponivel.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnValorTotalDisponivel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caixaEletronico/imagens/piggy-bank.png"))); // NOI18N
        btnValorTotalDisponivel.setText("     VALOR TOTAL DISPONÍVEL");
        btnValorTotalDisponivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValorTotalDisponivelActionPerformed(evt);
            }
        });
        getContentPane().add(btnValorTotalDisponivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 420, 40));

        btnSair.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caixaEletronico/imagens/cancel.png"))); // NOI18N
        btnSair.setText("     SAIR");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 510, 420, 40));

        btnReposicaoDeCedulas.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnReposicaoDeCedulas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caixaEletronico/imagens/money.png"))); // NOI18N
        btnReposicaoDeCedulas.setText("     REPOSIÇÃO DE CÉDULAS");
        btnReposicaoDeCedulas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReposicaoDeCedulasActionPerformed(evt);
            }
        });
        getContentPane().add(btnReposicaoDeCedulas, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 420, 40));

        btnCotaMinima.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnCotaMinima.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caixaEletronico/imagens/minus-symbol-inside-a-circle.png"))); // NOI18N
        btnCotaMinima.setText("     COTA MÍNIMA");
        btnCotaMinima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCotaMinimaActionPerformed(evt);
            }
        });
        getContentPane().add(btnCotaMinima, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, 420, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caixaEletronico/imagens/fund.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Acão do botão sair.
     * @param evt 
     */
    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        
        int op = JOptionPane.showOptionDialog(null, 
                "Tem certeza que deseja sair?", "Confirmação", 
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
                null, new Object[]{"Sim", "Não"}, 0);
        
        if( op != 0 ) return;
        
        JOptionPane.showMessageDialog(null, "Obrigado por utilizar nossos serviços!", 
                "Dados salvos.", JOptionPane.INFORMATION_MESSAGE);
        System.exit(0);
    }//GEN-LAST:event_btnSairActionPerformed

    /**
     * Ação do botão relatório Cédulas
     * @param evt 
     */
    private void btnRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioActionPerformed
        
        String resp = this.controller.pegaRelatorioCedulas();
        exibirMensagem("\n\n"+resp, "Relatório de Cédulas");
    }//GEN-LAST:event_btnRelatorioActionPerformed

    /**
     * Ação do botão Valor Total Disponível
     * @param evt 
     */
    private void btnValorTotalDisponivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValorTotalDisponivelActionPerformed
        
        String resp = this.controller.pegaValorTotalDisponivel();
        exibirMensagem("\n\n"+resp, "Valor armazenado.");
    }//GEN-LAST:event_btnValorTotalDisponivelActionPerformed

    /**
     * Ação do botão Cota Mínima
     * @param evt 
     */
    private void btnCotaMinimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCotaMinimaActionPerformed
        
        
        Object[] opcoes = new Object[]{"Sim", "Não"};
        int op = JOptionPane.showOptionDialog(null, 
                    this.controller.pegaValorCotaMinima(), 
                    "Tem certeza que deseja alterar o valor?",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, 1);
        
        if( op==1 || op==-1 ) return;
        
        
        do{
            String valorAux = JOptionPane.showInputDialog(null, 
                "Informe o novo valor para a cota mínima: ",
                "Alteração da cota mínima.",
                JOptionPane.WARNING_MESSAGE);
            
            if( valorAux == null ) return;
            
            try{
                int valor = Integer.parseInt(valorAux);
                if(valor < 0){
                    exibirMensagemDeErro("Informe apenas valores inteiros e positivos!\n");
                    continue;
                }
                
                String resp = this.controller.alterarValorCotaMinima(valor);
                exibirMensagem("\n"+resp, "Atualização cota mínima.");
                break;
                
            }catch(NumberFormatException ex){
                exibirMensagemDeErro("Informe apenas valores numéricos!\n");
                continue;
            }
        }while(true);
        
    }//GEN-LAST:event_btnCotaMinimaActionPerformed

    /**
     * Ação do botão extrato
     * @param evt 
     */
    private void btnExtratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtratoActionPerformed
        this.extrato = new ExtratoView();
        this.extrato.setVisible(true);
    }//GEN-LAST:event_btnExtratoActionPerformed

    /**
     * Ação do botão sacar.
     * @param evt 
     */
    private void btnSacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacarActionPerformed
        
        String aux="";
        int valor=0;
        
        do{
            aux = JOptionPane.showInputDialog(null, 
                "Informe o valor para sacar: ", 
                "Saque", JOptionPane.QUESTION_MESSAGE);
        
            if(aux == null) return;
            
            try{
                valor = Integer.parseInt(aux);
                
                if(valor <= 0){
                exibirMensagemDeErro("Não é possível sacar um valor menor ou igual a zero!");
                continue;
                }
                
                break;
                
            }catch(NumberFormatException ex){
                exibirMensagemDeErro("Informe apenas valores numéricos!");
                continue;
            }
        }while(true);
        
        String resp = this.controller.sacar(valor);
        exibirMensagem(resp+"\n", "Saque");
    }//GEN-LAST:event_btnSacarActionPerformed

    /**
     * Ação do botão Reposição de Cédulas
     * @param evt 
     */
    private void btnReposicaoDeCedulasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReposicaoDeCedulasActionPerformed
        
        
        //PEGA O VALOR DA NOTA
        Object[] opcoes = new Object[]{"2", "5", "10", "20", "50", "100"};
        int op, valor;
        
        op = JOptionPane.showOptionDialog(null, 
                "Escolha o valor da nota para repor: ", "Reposição",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null, opcoes, 0);
        
        if(op==0) valor = 2;
        else if(op==1) valor = 5;
        else if(op==2) valor = 10;
        else if(op==3) valor = 20;
        else if(op==4) valor = 50;
        else if(op==5) valor = 100;
        else return;
        
        //PEGA A QUANTIDADE PARA FAZER A REPOSICAO
        String aux="";
        int qtd=0;
        
        do{
            aux = JOptionPane.showInputDialog(null, 
                    "Informe a quantidade de notas para repor:", "Reposição",
                    JOptionPane.WARNING_MESSAGE);
            
            if(aux==null) return;
            try{
                qtd = Integer.parseInt(aux);
                if(qtd<=0) throw new NumberFormatException();
                break;
            }catch(NumberFormatException ex){
                exibirMensagemDeErro("Informe apenas valores inteiros maiores que zero!");
            }
        }while(true);
        
        String resp = this.controller.reposicaoDeCedulas(valor, qtd);
        exibirMensagem(resp, "Reposição de cédulas");
    }//GEN-LAST:event_btnReposicaoDeCedulasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CaixaEletronicoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CaixaEletronicoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CaixaEletronicoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CaixaEletronicoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CaixaEletronicoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCotaMinima;
    private javax.swing.JButton btnExtrato;
    private javax.swing.JButton btnRelatorio;
    private javax.swing.JButton btnReposicaoDeCedulas;
    private javax.swing.JButton btnSacar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnValorTotalDisponivel;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    /**
     * Exibe um JOptionPane com uma mensagem para o usuário.
     * @param resp Mensagem a ser exibida.
     * @param title Título da janela.
     */
    private void exibirMensagem(String resp, String title) {
        JOptionPane.showMessageDialog(null, resp, title, JOptionPane.INFORMATION_MESSAGE);
    }
    
    /**
     * Exibe um JOptionPane com uma mensagem de erro para o usuário.
     * @param msg Mensagem a ser exibida.
     */
    private void exibirMensagemDeErro(String msg) {
        JOptionPane.showMessageDialog(null, msg, "ERRO DE PARÂMETROS", JOptionPane.ERROR_MESSAGE);
    }
}
